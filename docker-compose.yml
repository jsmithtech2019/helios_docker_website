# Specify docker-compose version.
version: '3'

# Specify containers that will be built.
services:
  # Nginx Service
  nginx:
    # build:
    #   context: .
    #   dockerfile: Dockerfile.nginx
    image: nginx
    container_name: nginx
    volumes:
      # Include NGINX configuration
      - ./conf/default.conf:/etc/nginx/conf.d/default.conf
      # Include HTML/CSS/Js files
      - ./code/:/usr/share/nginx/html/
      # Include LetsEncrypt certificates
      # - ./data/certbot/conf:/etc/letsencrypt
      # - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - duet
    restart: always
    networks:
      - hitch-network

  # MySQL Service
  mysql:
    build:
      context: .
      dockerfile: Dockerfile.mysql
    container_name: db
    ports:
     - "3306:3306"
    environment:
      MYSQL_DATABASE: hitch
      MYSQL_USER: hitch
      MYSQL_ROOT_PASSWORD: helios
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    restart: always
    depends_on:
      - nginx
    networks:
     - hitch-network
    command: ['--default-authentication-plugin=mysql_native_password'] #'--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci',

  # DUET Service
  duet:
    build:
      context: .
      dockerfile: Dockerfile.duet
    container_name: duet
    restart: always
    ports:
      - "8080:5000"
    volumes:
      - ./duet/:/duet/
    environment:
      - FLASK_APP=/duet/duet.py
    command: flask run --host=0.0.0.0
    # depends_on:
    #   - nginx
    networks:
     hitch-network:
      aliases:
        - docker-duet

  # Certbot LetsEncrypt Manager
  # certbot:
  #   image: certbot/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  #   volumes:
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot

# Specify docker networks for container communication.
networks:
 hitch-network:

